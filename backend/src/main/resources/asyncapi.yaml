asyncapi: '2.6.0'
info:
  title: Checkers WebSocket API
  version: '1.0.0'
  description: >
    Demonstration of multiple specialized messages for each `type` value
    in a WebSocket-based Checkers game.

servers:
  local:
    url: ws://localhost:8080/ws
    protocol: ws
    description: Local WebSocket server for testing

channels:
  /ws:
    description: "Main WebSocket channel for the Checkers game."
    publish:
      operationId: "serverToClient"
      message:
        oneOf:
          - $ref: "#/components/messages/GameCreatedMessage"
          - $ref: "#/components/messages/MoveResultMessage"
          - $ref: "#/components/messages/PossibleMovesMessage"
          - $ref: "#/components/messages/JoinedWaitingQueueMessage"
          - $ref: "#/components/messages/GameEndMessage"
          - $ref: "#/components/messages/RematchRequestSendMessage"
          - $ref: "#/components/messages/ErrorMessage"
          - $ref: "#/components/messages/RejectionMessage"
      description: >
        Messages sent from server to client
    subscribe:
      operationId: "clientToServer"
      message:
        oneOf:
          - $ref: "#/components/messages/JoinQueueMessage"
          - $ref: "#/components/messages/LeaveQueueMessage"
          - $ref: "#/components/messages/MoveMessage"
          - $ref: "#/components/messages/PossibilitiesMessage"
          - $ref: "#/components/messages/RematchRequestReceiveMessage"
          - $ref: "#/components/messages/AcceptRematchMessage"
          - $ref: "#/components/messages/DeclineRematchMessage"
          - $ref: "#/components/messages/LeaveMessage"
      description: >
        Messages sent from client to server

components:
  messages:
    ############################################
    # MESSAGES CLIENT -> SERVER (subscribe)
    ############################################

    JoinQueueMessage:
      name: JoinQueueMessage
      title: "JoinQueue"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "joinQueue" ]
          user:
            type: object
            properties:
              username:
                type: string
                description: "Name of the player"
            required: [username]
        required: [ type, user ]
        additionalProperties: false
    LeaveQueueMessage:
      name: LeaveQueueMessage
      title: "LeaveQueue"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "leaveQueue" ]
          user:
            type: object
            properties:
              username:
                type: string
                description: "Name of the player"
            required: [username]
        required: [ type, user ]
        additionalProperties: false

    MoveMessage:
      name: MoveMessage
      title: "Move"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "move" ]
          gameId:
            type: string
            description: "ID of the existing game"
          move:
            type: object
            description: "Move details"
            properties:
              fromRow:
                type: integer
              fromCol:
                type: integer
              toRow:
                type: integer
              toCol:
                type: integer
            required: [ fromRow, fromCol, toRow, toCol ]
        required: [type, gameId, move]
        additionalProperties: false

    PossibilitiesMessage:
      name: PossibilitiesMessage
      title: "Possibilities"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "possibilities" ]
          gameId:
            type: string
            description: "ID of the game"
          row:
            type: integer
            description: "Row for which to get possible moves"
          col:
            type: integer
            description: "Column for which to get possible moves"
        required: [ type, gameId, row, col ]
        additionalProperties: false

    RematchRequestSendMessage:
      name: RematchRequestMessage
      title: "RematchRequest"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "rematchRequest" ]
          gameId:
            type: string
            description: "ID of the game for which a rematch is requested"
        required: [type, gameId]
        additionalProperties: false

    AcceptRematchMessage:
      name: AcceptRematchMessage
      title: "AcceptRematch"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "acceptRematch" ]
          gameId:
            type: string
            description: "ID of the game for which rematch is accepted"
        required: [type, gameId]
        additionalProperties: false

    DeclineRematchMessage:
      name: DeclineRematchMessage
      title: "DeclineRematch"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "declineRematch" ]
          gameId:
            type: string
            description: "ID of the game for which rematch is declined"
        required: [type, gameId]
        additionalProperties: false

    LeaveMessage:
      name: LeaveMessage
      title: "leave"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "leave" ]
          gameId:
            type: string
            description: "ID of the game being left"
        required: [type, gameId]
        additionalProperties: false

    ############################################
    # MESSAGES SERVER -> CLIENT (publish)
    ############################################

    GameCreatedMessage:
      name: GameCreatedMessage
      title: "GameCreated"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "gameCreated" ]
          gameId:
            type: string
            description: "ID of the newly created game"
          assignedColor:
            type: string
            enum: ["white", "black"]
            description: "Color assigned to the recipient"
          opponent:
            type: object
            properties:
              username:
                type: string
                description: "Name of the opponent"
        required: [ type, gameId, assignedColor, opponent ]
        additionalProperties: false

    MoveResultMessage:
      name: MoveResultMessage
      title: "MoveResult"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ["move"]
          move:
            type: object
            properties:
              fromRow:
                type: integer
              fromCol:
                type: integer
              toRow:
                type: integer
              toCol:
                type: integer
            required: [fromRow, fromCol, toRow, toCol]
          captured:
            type: boolean
          capturedPiece:
            type: object
            properties:
              row:
                type: integer
              col:
                type: integer
          hasMoreTakes:
            type: boolean
          currentTurn:
            type: string
            enum: ["white", "black"]
          previousTurn:
            type: string
            enum: ["white", "black"]
        required: [ type, move, captured, capturedPiece, hasMoreTakes, currentTurn, previousTurn ]
        additionalProperties: false

    PossibleMovesMessage:
      name: PossibleMovesMessage
      title: "PossibleMoves"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ["possibilities"]
          moves:
            type: array
            items:
              type: object
              properties:
                row:
                  type: integer
                col:
                  type: integer
              required: [ row, col ]
            description: "List of possible moves from the requested position."
        required: [ type, moves ]
        additionalProperties: false

    JoinedWaitingQueueMessage:
      name: JoinedWaitingQueueMessage
      title: "JoinedWaitingQueue"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ["waiting"]
          message:
            type: string
            enum: ["Waiting for an opponent..."]
        required: [type, message]
        additionalProperties: false

    GameEndMessage:
      name: GameEndMessage
      title: "GameEnd"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ["gameEnd"]
          result:
            type: string
            enum: ["draw", "white", "black"]
        required: [type, result]
        additionalProperties: false

    RematchRequestReceiveMessage:
      name: RematchPropositionMessage
      title: "RematchRequest"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "rematchRequest" ]
          gameId:
            type: string
            description: "ID of the game for which a rematch is proposed"
        required: [type, gameId]
        additionalProperties: false

    ErrorMessage:
      name: ErrorMessage
      title: "Error"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "error" ]
          message:
            type: string
            description: "A description of the error encountered"
        required: [ type, message ]
        additionalProperties: false

    RejectionMessage:
      name: RejectionMessage
      title: "Rejection"
      payload:
        type: object
        properties:
          type:
            type: string
            enum: [ "rejection" ]
          message:
            type: string
            description: "Message indicating that the opponent rejected the rematch request"
        required: [ type, message ]
        additionalProperties: false
